Id,Title,Category,Diagram,Interaction,Priority,State,Changed By,Description,Justification,Last Modified,Countermeasure,Risk,Team
25,Potential SQL Injection Vulnerability for SQL Database,Tampering,Diagram 1,SQL,High,Needs Investigation,MROHR-PC\mrohr,SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. Any procedure that constructs SQL statements should be reviewed for injection vulnerabilities because SQL Server will execute all syntactically valid queries that it receives. Even parameterized data can be manipulated by a skilled and determined attacker.,,6/29/2016 1:09:35 PM,Hibernate + Criterias should be used as persistance layer,High,Team1
1,Weak Access Control for a Resource,Information Disclosure,Diagram 1,SQL,High,Mitigated,MROHR-PC\mrohr,Improper data protection of Web Application can allow an attacker to read information not intended for disclosure. Review authorization settings.,Already handled by OPS,6/29/2016 1:07:14 PM,,High,Team1
24,Potential Process Crash or Stop for Web Application,Denial Of Service,Diagram 1,HTTPS,High,Not Applicable,MROHR-PC\mrohr,"Web Application crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,6/29/2016 1:09:03 PM,,High,Team1
23,Potential Data Repudiation by Web Application,Repudiation,Diagram 1,HTTPS,High,Not Applicable,MROHR-PC\mrohr,"Web Application claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,6/29/2016 1:08:57 PM,,High,Team1
22,Potential Remote Code Execution,Tampering,Diagram 1,HTTPS,High,Not Applicable,MROHR-PC\mrohr,User may be able to remotely execute code for Web Application.,PHP is not used,6/29/2016 1:08:46 PM,,High,Team1
21,Cross-Site Scripting (XSS),Tampering,Diagram 1,HTTPS,High,Needs Investigation,MROHR-PC\mrohr,The web server 'Web Application' could be a subject to a cross-site scripting attack because it does not sanitize untrusted input.,,6/29/2016 1:08:29 PM,Encode Output in application / Apply CSP,High,Team1
20,Spoofing the User External Entity,Spoofing,Diagram 1,HTTPS,High,Needs Investigation,MROHR-PC\mrohr,User may be spoofed by an attacker and this may lead to unauthorized access to Web Application. Consider using a standard authentication mechanism to identify the external entity.,,6/29/2016 1:10:23 PM,Should be handled by strong authentication method,High,Team1
18,Invalid Internet Access (Demo),Compliance,Diagram 1,HTTPS,High,Needs Investigation,MROHR-PC\mrohr,Web Applications should not directly connected to the Internet,,6/29/2016 1:09:42 PM,,High,Team1
17,External Entity User Potentially Denies Receiving Data,Repudiation,Diagram 1,HTTPS,High,Not Applicable,MROHR-PC\mrohr,"User claims that it did not receive data from a process on the other side of the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,6/29/2016 1:07:46 PM,,High,Team1
16,Spoofing of the User External Destination Entity,Spoofing,Diagram 1,HTTPS,High,Not Applicable,MROHR-PC\mrohr,User may be spoofed by an attacker and this may lead to data being sent to the attacker's target instead of User. Consider using a standard authentication mechanism to identify the external entity.,,6/29/2016 1:07:38 PM,,High,Team1
